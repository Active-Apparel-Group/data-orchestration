id: debug-available-envs
namespace: company.team

tasks:
  - id: list_all_available_envs
    type: io.kestra.plugin.scripts.python.Commands
    taskRunner:
      type: io.kestra.plugin.scripts.runner.docker.Docker
      pullPolicy: NEVER
    containerImage: my-custom-kestra:latest
    commands:
      - |
        python3 -c "
        import os
        
        print('=== ALL AVAILABLE ENVIRONMENT VARIABLES ===')
        print('(This will show us what envs.* variables we can actually use)')
        print()
        
        # Get all environment variables from the main Kestra container
        # These are what we can reference with {{ envs.variable_name }}
        all_env_vars = dict(os.environ)
        
        # Show all variables that might be database related
        db_related = {k: v for k, v in all_env_vars.items() 
                     if any(keyword in k.upper() for keyword in ['DB', 'DATABASE', 'SQL', 'HOST', 'PORT', 'USER', 'PASS'])}
        
        print(f'Found {len(db_related)} database-related environment variables:')
        print()
        
        for key, value in sorted(db_related.items()):
            if 'PASSWORD' in key or 'SECRET' in key:
                print(f'{key}: [HIDDEN FOR SECURITY]')
            else:
                print(f'{key}: {value}')
        
        print()
        print('=== KESTRA ENVIRONMENT SYNTAX ===')
        print('To reference these in workflows, use:')
        for key in sorted(db_related.keys())[:10]:  # Show first 10 as examples
            kestra_ref = key.lower()
            print(f'{key} -> {{{{ envs.{kestra_ref} }}}}')
        "
