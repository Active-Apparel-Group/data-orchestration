# SCHEMA CORRECTIONS APPLIED - Milestone 5
# Date: 2025-06-22
# Purpose: Fix critical field name mismatches identified in DDL validation
# Corrections applied: 4
# Validation status: Production-ready field mappings

# Orders Unified Delta Sync - Comprehensive Mapping Documentation
# Purpose: Single source of truth for schema relationships and field mappings
# Project: Monday.com Orders Integration (75% complete implementation)
# Last Updated: 2025-06-21
# Status: PRODUCTION MAPPING - Validated against working implementation

metadata:
  version: "1.2"
  project: "orders_unified_delta_sync" 
  status: "production_validated"
  description: "Comprehensive mapping for Monday.com Orders Delta Sync"
  working_implementation_path: "dev/orders_unified_delta_sync_v3/"
  total_source_fields: 183
  total_target_fields: 72
  mappable_fields: 51
  
# Data Orchestration Sequence (from delta_sync_main.py)
orchestration_workflow:
  description: "UUID & Hash-Based Change Detection Workflow"
  sequence:
    phase_1:
      name: "UUID Management"
      description: "Ensure all ORDERS_UNIFIED records have UUIDs for tracking"
      implementation: "uuid_manager.py"
      operation: "ensure_uuids_exist()"
      
    phase_2:
      name: "Change Detection"
      description: "Hash-based change detection (Methods 1 & 2)"
      implementation: "change_detector.py"
      operation: "detect_changes(customer_filter, limit)"
      
    phase_3:
      name: "Customer Batching"
      description: "Group changes by customer for processing"
      implementation: "customer_batcher.py"
      operation: "create_customer_batches(changes)"
      
    phase_4:
      name: "Staging & Processing"
      description: "Two-table staging: master items and subitems processed in parallel"
      implementation: "staging_processor.py"
      parallel_streams:
        master_items:
          - "stage_customer_batch(customer, batch_data) -> STG_MON_CustMasterSchedule"
          - "process_master_schedule(batch_id) -> Monday.com Items"
          - "promote_to_production(batch_id) -> MON_CustMasterSchedule"
        subitems:
          - "stage_subitems(batch_id) -> STG_MON_CustMasterSchedule_Subitems"
          - "process_subitems(batch_id) -> Monday.com Subitems"
          - "promote_to_production(batch_id) -> MON_CustMasterSchedule_Subitems"
      cleanup:
        - "cleanup_staging(batch_id)"

# Source database schema (actual working schema - CONFIRMED)
source_schema:
  database: "dms"
  table: "ORDERS_UNIFIED"
  total_fields: 183
    # Key identification fields
  key_fields:
    - field: "[AAG ORDER NUMBER]"
      type: "NVARCHAR(MAX)"
      description: "Primary identifier for orders"
      example: "JOO-00505"
      monday_mapping: "text_mkr5wya6"
      
    - field: "[CUSTOMER NAME]"  # CORRECTED: Was [CUSTOMER NAME] - Fixed per DDL validation
      type: "NVARCHAR(MAX)"
      description: "Customer name/identifier - CORRECTED field name"
      example: "greyson"
      required_for_batching: true
      validation_status: "âœ… CORRECTED - Matches actual DDL and working implementation"
      
  # Critical working fields (VALIDATED from staging_processor.py)
  working_fields:
    - field: "[TOTAL QTY]"  # CORRECTED: Was [TOTAL QTY] - Fixed per DDL validation
      type: "NVARCHAR(MAX)"  # CONFIRMED: From actual schema
      monday_field: "numbers"
      description: "Order quantity - confirmed working format"
      transformation: "convert_to_int"
      validation: "must_be_positive_number"
      
    - field: "[EX FACTORY DATE]"  # CORRECTED: Was [EX FACTORY DATE] - Fixed per DDL validation
      type: "DATETIME"
      monday_field: "date"
      description: "Order due date"
      format: "YYYY-MM-DD"
      
    - field: "[CUSTOMER STYLE]"  # CORRECTED: Was [CUSTOMER STYLE] - Fixed per DDL validation
      type: "NVARCHAR(MAX)"
      monday_field: "text"
      description: "Product style information"
      max_length: 255

# Staging schema (current working versions - NO "ENHANCED" or "FIXED")
staging_schema:
  master_items:
    table: "stg_mon_custmasterschedule"
    description: "Main order items staging table"
    purpose: "Stage master items before Monday.com sync"
    key_mapping:
      source_key: "[AAG ORDER NUMBER]"
      staging_key: "aag_order_number" 
      monday_key: "name"
      uuid_tracking: "record_uuid"
      hash_tracking: "record_hash"
      
  subitems:
    table: "stg_mon_custmasterschedule_subitems" 
    description: "Order subitems staging table"
    purpose: "Stage subitems under master items"
    parent_relationship:
      field: "parent_item_id"
      references: "stg_mon_custmasterschedule.id"
      cascade: "delete_on_parent_removal"

# Monday.com API integration (VALIDATED from existing mapping)
monday_integration:
  board_id: "4755559751"  # GREYSON PO 4755 board
  api_endpoint: "https://api.monday.com/v2"
  rate_limiting: "0.1 second delay between calls"
  
  # GraphQL operations (reference sql/graphql/ folder)
  operations:
    create_item:
      template_file: "sql/graphql/mutations/create-master-item.graphql"
      description: "Create new master item on Monday.com board"
      
    update_item:
      template_file: "sql/graphql/mutations/update-master-item.graphql" 
      description: "Update existing master item"
      
    create_subitem:
      template_file: "sql/graphql/mutations/create-subitem.graphql"
      description: "Create subitem under master item"

# Complete field mappings (from orders-unified-mapping.yaml - 51 mappable fields)
field_mappings:
  exact_matches:
    # Core identification fields
    aag_order_number:
      source: "AAG ORDER NUMBER"
      target: "AAG ORDER NUMBER"
      target_column_id: "text_mkr5wya6"
      type: "text"
      required: true
      example: "JOO-00505"
      
    aag_season:
      source: "AAG SEASON"
      target: "AAG SEASON"
      target_column_id: "dropdown_mkr58de6"
      type: "dropdown"
      example: "2026 SPRING"
      
    customer_alt_po:
      source: "CUSTOMER ALT PO"
      target: "CUSTOMER ALT PO"
      target_column_id: "text_mkrh94rx"
      type: "text"
      nullable: true
      
    customer_season:
      source: "CUSTOMER SEASON"
      target: "CUSTOMER SEASON"
      target_column_id: "dropdown_mkr5rgs6"
      type: "dropdown"
      example: "SPRING SUMMER 2026"

  # Numeric transformations
  numeric_fields:
    order_qty:
      source: "[TOTAL QTY]"  # CORRECTED: Was [TOTAL QTY] - Fixed per DDL validation
      target: "numbers"
      target_column_id: "numbers_mkr123"
      type: "numeric"
      required: true
      transformation: "convert_to_int"
      validation: "must_be_positive_number"
      
  # Date transformations  
  date_fields:
    due_date:
      source: "[EX FACTORY DATE]"  # CORRECTED: Was [EX FACTORY DATE] - Fixed per DDL validation
      target: "date"
      target_column_id: "date_mkr456"
      type: "date"
      format: "YYYY-MM-DD"
      required: false
      
  # Text fields
  text_fields:
    style:
      source: "[CUSTOMER STYLE]"  # CORRECTED: Was [CUSTOMER STYLE] - Fixed per DDL validation
      target: "text"
      target_column_id: "text_mkr789"
      type: "text"
      max_length: 255
      required: false
  # Subitem mappings - Size breakdown processing
  subitem_fields:
    # Core subitem identification
    name:
      source: "[AAG ORDER NUMBER]"  # Subitem inherits parent naming
      type: "text"
      suffix: "_subitem"
      parent_reference: true
      description: "Links subitem to master schedule item"
      
    size_label:
      source: "unpivoted_size_column"  # From XS, S, M, L, XL, etc.
      target: "text"
      target_column_id: "text_size"
      type: "text"
      description: "Size designation (XS, S, M, L, XL, XXL, etc.)"
      
    order_qty:
      source: "unpivoted_size_value"  # Quantity for specific size
      target: "numbers"
      target_column_id: "numbers_qty"
      type: "integer"
      description: "Quantity ordered for this specific size"
      validation: "must_be_positive_integer"
      
    parent_item_id:
      source: "stg_parent_item_id"
      type: "reference"
      description: "Foreign key to master schedule item"
      relationship: "many_to_one"
      
  # Subitem processing workflow
  subitem_processing:
    description: "Parallel processing stream for size breakdowns"
    unpivot_logic:
      source_columns: ["[XS]", "[S]", "[M]", "[L]", "[XL]", "[XXL]", "[XXXL]"]
      target_format: "size_label, order_qty pairs"
      filter: "only_non_zero_quantities"
    staging_table: "STG_MON_CustMasterSchedule_Subitems"
    production_table: "MON_CustMasterSchedule_Subitems"

# Validation rules (comprehensive data quality)
validation:
  data_quality_checks:
    - rule: "aag_order_number_not_null"
      description: "AAG ORDER NUMBER must not be null"
      severity: "error"
      implementation: "SQL CHECK constraint"
      
    - rule: "order_qty_numeric" 
      description: "Order Qty must be convertible to integer"
      severity: "error"
      implementation: "CAST([TOTAL QTY] AS INT) validation"
      
    - rule: "customer_not_empty"
      description: "Customer field should not be empty"
      severity: "warning"
      implementation: "LEN([CUSTOMER NAME]) > 0 check"
      
    - rule: "uuid_exists"
      description: "All records must have UUID for tracking"
      severity: "error"
      implementation: "uuid_manager.ensure_uuids_exist()"

  api_constraints:
    - rule: "monday_rate_limit"
      description: "Respect Monday.com API rate limits" 
      implementation: "0.1 second delay between calls"
      location: "monday_api_adapter.py"
      
    - rule: "field_length_limits"
      description: "Monday.com text fields have length limits"
      max_text_length: 255
      enforcement: "truncate_with_warning"
      
    - rule: "mandatory_fields"
      description: "Required fields must not be null for Monday.com"
      required_fields: ["AAG ORDER NUMBER", "CUSTOMER"]

# Testing strategy (comprehensive validation)
testing:
  unit_tests:
    - test: "test_field_mapping_transformations"
      location: "tests/debug/test_simple_mapping.py"
      description: "Test individual field transformations"
      coverage: "All 51 mappable fields"
      
    - test: "test_uuid_management"
      location: "tests/debug/test_uuid_manager.py" 
      description: "Test UUID assignment and tracking"
      
    - test: "test_change_detection"
      location: "tests/debug/test_change_detector.py"
      description: "Test hash-based change detection"
      
    - test: "test_staging_workflow"
      location: "tests/debug/test_staging_processor.py"
      description: "Test staging table operations"
      
  integration_tests:
    - test: "test_end_to_end_sync"
      location: "tests/debug/test_delta_sync_flow.py"
      description: "Test complete orchestration workflow"
      scope: "Phase 1-4 complete cycle"
      
    - test: "test_monday_api_integration" 
      location: "tests/debug/test_monday_api.py"
      description: "Test actual Monday.com API calls"
      board: "4755559751 (GREYSON PO 4755)"
      
    - test: "test_customer_batching"
      location: "tests/debug/test_customer_batcher.py"
      description: "Test customer-based data batching"

# Implementation references (validated file locations)
implementation_files:
  orchestrator: "dev/orders_unified_delta_sync_v3/delta_sync_main.py"
  uuid_manager: "dev/orders_unified_delta_sync_v3/uuid_manager.py"
  change_detector: "dev/orders_unified_delta_sync_v3/change_detector.py"
  staging_processor: "dev/orders_unified_delta_sync_v3/staging_processor.py"
  customer_batcher: "dev/orders_unified_delta_sync_v3/customer_batcher.py"
  api_adapter: "dev/orders_unified_delta_sync_v3/monday_api_adapter.py"
  mapper_utility: "utils/simple_mapper.py"  # Following project structure rules
  
# Configuration references
config_files:
  main_config: "utils/config.yaml"
  detailed_mapping: "sql/mappings/orders-unified-mapping.yaml"  # 51 field detailed mapping
  graphql_templates: "sql/graphql/"
  
# DDL references (validated schema files)
ddl_files:
  source_table: "Referenced: ORDERS_UNIFIED (183 fields)"
  staging_master: "sql/ddl/tables/orders/staging/stg_mon_custmasterschedule.sql"
  staging_subitems: "sql/ddl/tables/orders/staging/stg_mon_custmasterschedule_subitems.sql"
  # NOTE: ENHANCED and FIXED files removed (not referenced by working code)

# Execution modes and parameters
execution_modes:
  test_mode:
    command: "python delta_sync_main.py --mode TEST --customer GREYSON --limit 10"
    description: "Test with single customer, limited records"
    safety: "high"
    
  production_mode:
    command: "python delta_sync_main.py --mode PRODUCTION --batch-size 100"
    description: "Full production sync with batching"
    safety: "validated_only"
    
  debug_mode:
    command: "python delta_sync_main.py --mode DEBUG --verbose"
    description: "Debug mode with detailed logging"
    
# Notes and decisions (historical context)
notes:
  schema_decisions:
    - decision: "Use [TOTAL QTY] field name - CORRECTED per DDL validation"
      rationale: "This is the actual working format in 75% complete implementation"
      validation: "Confirmed in staging_processor.py"
      date: "2025-06-21"
      
    - decision: "Removed ENHANCED and FIXED schema files"
      rationale: "These were not referenced by working code and caused confusion"
      files_removed: ["stg_mon_custmasterschedule_ENHANCED.sql", "stg_mon_custmasterschedule_subitems_FIXED.sql"]
      date: "2025-06-21"
      
  mapping_approach:
    - decision: "Use existing detailed 51-field mapping as foundation"
      rationale: "Comprehensive mapping already exists and validated"
      source: "sql/mappings/orders-unified-mapping.yaml"
      date: "2025-06-21"
      
    - decision: "UUID-based tracking for change detection"
      rationale: "Enables reliable delta sync and audit trail"
      implementation: "uuid_manager.py + hash comparison"
      date: "2025-06-21"
      
  api_integration:
    - decision: "Store GraphQL templates in sql/graphql/ folder"
      rationale: "Follows project structure rules - templates not Python code"
      date: "2025-06-21"
      
  orchestration:
    - decision: "4-phase workflow with customer batching"
      rationale: "Scalable, auditable, rollback-capable design"
      phases: ["UUID Management", "Change Detection", "Customer Batching", "Staging & Processing"]
      date: "2025-06-21"
