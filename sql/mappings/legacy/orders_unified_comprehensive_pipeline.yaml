# Orders Unified Comprehensive Pipeline Mapping
# Project: Data Orchestration - Active Apparel Group
# Target: Monday.com API (ORDERS_UNIFIED Delta Sync V3)
# Date: $(date)
# Version: 1.0
# 
# This is the single source of truth for all mappings in the Orders Unified pipeline.
# It references every mapping (source → staging → Monday.com → GraphQL) with
# correct size column identification and multi-dimensional garment data structure.

metadata:
  project_name: "Orders Unified Delta Sync V3"
  company: "Active Apparel Group"
  target_system: "Monday.com API"
  source_system: "SQL Server ORDERS_UNIFIED"
  pipeline_type: "Backward Mapping (Target-First)"
  version: "1.0"
  last_updated: "2024-01-20"
  schema_validation: true
  multi_dimensional_garment_data: true
  
data_model:
  description: "Multi-dimensional garment order data with size melting/pivoting for Monday.com subitems"
  dimensions:
    - order_header: "Main order information (style, customer, dates)"
    - size_breakdown: "Individual size quantities that become subitems"
    - pricing: "Cost breakdowns and fees"
    - logistics: "Shipping and delivery information"
    - validation: "Data quality and business rules"

# ACTUAL SIZE COLUMNS: These are the true size columns between "UNIT OF MEASURE" and "TOTAL QTY"
size_columns:
  definition: "Columns between 'UNIT OF MEASURE' and 'TOTAL QTY' in ORDERS_UNIFIED schema"
  total_count: 164  # Accurate count based on DDL analysis
  categories:
    clothing_sizes: ["XXXS", "XXS", "XS", "S", "S/M", "M", "M/L", "L", "L/XL", "XL", "XXL", "XXXL"]
    numeric_sizes: ["0", "2", "4", "6", "8", "10", "12", "14", "16", "18", "20"]
    children_sizes: ["0-3M", "3-6M", "6-9M", "9-12M", "12-18M", "18-24M", "2T", "3T", "4T", "5T", "6T"]
    waist_lengths: ["30/30", "30/32", "32/30", "32/32", "34/30", "34/32", "36/30", "36/32"]
    bra_sizes: ["32C", "32D", "32DD", "34C", "34D", "34DD", "36C", "36D", "36DD", "32DDD", "34DDD", "36DDD", "38C", "38D", "38DD", "38DDD"]
    specialty_sizes: ["OS", "ONE SIZE", "1X", "2X", "2XL", "3X", "3XL", "4X", "4XL", "4XT"]
    plus_sizes: ["0w", "2w", "4w", "6w", "8w", "10w", "12w"]
    extended_numeric: ["22", "24", "26", "27", "28", "28-30L", "29", "30", "31", "32", "33", "34", "35", "36", "38", "40", "42", "44", "46", "48", "50", "52", "54", "56", "58", "60"]
    length_variations: ["30-30L", "30-31L", "30-32L", "31-30L", "31-31L", "31-32L", "32-30L", "32-31L", "32-32L", "33-30L", "33-31L", "33-32L", "34-30L", "34-31L", "34-32L", "35-30L", "35-31L", "35-32L", "36-30L", "36-31L", "36-32L", "38-30L", "38-31L", "38-32L", "40-30L", "40-31L"]
    waist_combinations: ["31/30", "31/32", "32/34", "32/36", "33/30", "33/32", "34/34", "35/30", "35/32", "36/34", "38/30", "38/32", "38/34", "38/36", "40/30", "40/32"]
    x_sizes: ["30X30", "31X30", "32X30", "34X30", "36X30", "38X30", "40X30"]
    range_sizes: ["2/3", "4/5", "6/7", "L(10-12)", "L(14-16)", "M(10-12)", "M(8-10)", "S(6-8)"]
    misc_sizes: ["5", "7", "9"]

# PIPELINE STAGE 1: Source System (ORDERS_UNIFIED)
source_system:
  name: "ORDERS_UNIFIED"
  type: "SQL Server Table"
  database: "ORDERS"
  schema: "dbo"
  total_columns: 276
  size_columns_start: "UNIT OF MEASURE"
  size_columns_end: "TOTAL QTY"
  
  key_fields:
    primary_key: 
      - "AAG ORDER NUMBER"
      - "CUSTOMER STYLE"
      - "CUSTOMER COLOUR DESCRIPTION"
    business_keys:
      - "PO NUMBER"
      - "CUSTOMER NAME"
      - "AAG SEASON"
    
  field_groups:
    order_header:
      - "AAG ORDER NUMBER"
      - "CUSTOMER NAME"
      - "ORDER DATE PO RECEIVED"
      - "CUSTOMER SEASON"
      - "DROP"
      - "PO NUMBER"
      - "CUSTOMER STYLE"
      - "STYLE DESCRIPTION"
      - "CUSTOMER COLOUR DESCRIPTION"
      - "CATEGORY"
      - "PATTERN ID"
      
    logistics:
      - "ORDER TYPE"
      - "DESTINATION"
      - "DESTINATION WAREHOUSE"
      - "ETA CUSTOMER WAREHOUSE DATE"
      - "EX FACTORY DATE"
      - "DELIVERY TERMS"
      - "PLANNED DELIVERY METHOD"
      
    pricing:
      - "CUSTOMER PRICE"
      - "EX WORKS (USD)"
      - "FINAL FOB (USD)"
      - "FREIGHT"
      - "DDP US (USD)"
      
    validation:
      - "VALIDATION"
      - "VALIDATION2"
      - "VALIDATION3"
      - "VALIDATION4"

# PIPELINE STAGE 2: Staging Layer
staging_layer:
  tables:
    main_staging:
      name: "stg_mon_custmasterschedule"
      purpose: "Main order records for Monday.com parent items"
      source: "ORDERS_UNIFIED"
      transformation: "header_aggregation"
      
      field_mappings:
        - source: "AAG ORDER NUMBER"
          target: "aag_order_number"
          type: "direct"
          
        - source: "CUSTOMER NAME"
          target: "customer_name"
          type: "direct"
          
        - source: "PO NUMBER"
          target: "po_number"
          type: "direct"
          
        - source: "CUSTOMER STYLE"
          target: "customer_style"
          type: "direct"
          
        - source: "STYLE DESCRIPTION"
          target: "style_description"
          type: "direct"
          
        - source: "CUSTOMER COLOUR DESCRIPTION"
          target: "customer_colour_description"
          type: "direct"
          
        - source: "CATEGORY"
          target: "category"
          type: "direct"
          
        - source: "ORDER DATE PO RECEIVED"
          target: "order_date_po_received"
          type: "date_format"
          format: "YYYY-MM-DD"
          
        - source: "ETA CUSTOMER WAREHOUSE DATE"
          target: "eta_customer_warehouse_date"
          type: "date_format"
          format: "YYYY-MM-DD"
          
        - source: "EX FACTORY DATE"
          target: "ex_factory_date"
          type: "date_format"
          format: "YYYY-MM-DD"
          
        - source: "SIZE_COLUMNS_AGGREGATED"
          target: "total_qty"
          type: "calculation"
          logic: "SUM(all_non_null_size_columns)"
          
        - source: "CUSTOMER PRICE"
          target: "customer_price"
          type: "numeric_clean"
          
        - source: "EX WORKS (USD)"
          target: "ex_works_usd"
          type: "numeric_clean"
          
    subitems_staging:
      name: "stg_mon_custmasterschedule_subitems"
      purpose: "Individual size records for Monday.com subitems"
      source: "ORDERS_UNIFIED"
      transformation: "size_melting"
      
      size_melting_logic:
        description: "Convert wide size columns to long format for subitems"
        input: "Single order row with 164 size columns"
        output: "Multiple rows (one per size with qty > 0)"
        
        transformation_steps:
          1: "Iterate through all 164 size columns"
          2: "For each size with quantity > 0, create new row"
          3: "Inherit parent order information"
          4: "Set size-specific fields"
          
        field_mappings:
          - source: "AAG ORDER NUMBER"
            target: "parent_aag_order_number"
            type: "inherited"
            
          - source: "SIZE_COLUMN_NAME"
            target: "size"
            type: "column_name"
            
          - source: "SIZE_COLUMN_VALUE"
            target: "quantity"
            type: "direct"
            condition: "value > 0"
            
          - source: "CUSTOMER STYLE"
            target: "parent_customer_style"
            type: "inherited"
            
          - source: "CUSTOMER COLOUR DESCRIPTION"
            target: "parent_colour"
            type: "inherited"

# PIPELINE STAGE 3: Monday.com API Layer
monday_api_layer:
  target_boards:
    main_board:
      id: "4755559751"
      name: "Customer Master Schedule"
      purpose: "Parent order items"
      source_table: "stg_mon_custmasterschedule"
      
      column_mappings:
        - monday_column: "name"
          source_field: "customer_style"
          type: "text"
          required: true
          
        - monday_column: "text"
          source_field: "aag_order_number"
          type: "text"
          
        - monday_column: "text0"
          source_field: "customer_name"
          type: "text"
          
        - monday_column: "text1"
          source_field: "po_number"
          type: "text"
          
        - monday_column: "text2"
          source_field: "style_description"
          type: "text"
          
        - monday_column: "text3"
          source_field: "customer_colour_description"
          type: "text"
          
        - monday_column: "text4"
          source_field: "category"
          type: "text"
          
        - monday_column: "date"
          source_field: "order_date_po_received"
          type: "date"
          
        - monday_column: "date4"
          source_field: "eta_customer_warehouse_date"
          type: "date"
          
        - monday_column: "date0"
          source_field: "ex_factory_date"
          type: "date"
          
        - monday_column: "numbers"
          source_field: "total_qty"
          type: "numeric"
          
        - monday_column: "numbers0"
          source_field: "customer_price"
          type: "numeric"
          
        - monday_column: "numbers1"
          source_field: "ex_works_usd"
          type: "numeric"
          
    subitems_board:
      id: "4755559751"  # Same board, different item type
      name: "Customer Master Schedule Subitems"
      purpose: "Individual size quantities"
      source_table: "stg_mon_custmasterschedule_subitems"
      parent_relation: "main_board"
      
      column_mappings:
        - monday_column: "name"
          source_field: "size"
          type: "text"
          required: true
          
        - monday_column: "numbers"
          source_field: "quantity"
          type: "numeric"
          required: true
          
        - monday_column: "text"
          source_field: "parent_aag_order_number"
          type: "text"
          
        - monday_column: "text0"
          source_field: "parent_customer_style"
          type: "text"
          
        - monday_column: "text1"
          source_field: "parent_colour"
          type: "text"

# PIPELINE STAGE 4: GraphQL Operations
graphql_operations:
  templates_directory: "sql/graphql/mutations/"
  
  operations:
    create_parent_item:
      file: "create_order_item.graphql"
      purpose: "Create main order item in Monday.com"
      source: "stg_mon_custmasterschedule"
      
      mutation_template: |
        mutation CreateOrderItem($boardId: ID!, $itemName: String!, $columnValues: JSON!) {
          create_item(
            board_id: $boardId
            item_name: $itemName
            column_values: $columnValues
          ) {
            id
            name
            created_at
          }
        }
      
      variable_mapping:
        boardId: "4755559751"
        itemName: "customer_style"
        columnValues: "json_serialize_all_columns"
        
    create_subitem:
      file: "create_size_subitem.graphql"
      purpose: "Create size subitem under parent order"
      source: "stg_mon_custmasterschedule_subitems"
      
      mutation_template: |
        mutation CreateSizeSubitem($parentItemId: ID!, $itemName: String!, $columnValues: JSON!) {
          create_subitem(
            parent_item_id: $parentItemId
            item_name: $itemName
            column_values: $columnValues
          ) {
            id
            name
            created_at
          }
        }
      
      variable_mapping:
        parentItemId: "lookup_parent_monday_id"
        itemName: "size"
        columnValues: "json_serialize_size_columns"
        
    update_item:
      file: "update_order_item.graphql"
      purpose: "Update existing order item"
      source: "stg_mon_custmasterschedule"
      
      mutation_template: |
        mutation UpdateOrderItem($itemId: ID!, $columnValues: JSON!) {
          change_multiple_column_values(
            item_id: $itemId
            column_values: $columnValues
          ) {
            id
            name
            updated_at
          }
        }
        
    validate_item:
      file: "query_item_validation.graphql"
      purpose: "Validate item exists and get current values"
      
      query_template: |
        query ValidateItem($boardId: ID!, $itemName: String!) {
          boards(ids: [$boardId]) {
            items_page(query_params: {rules: [{column_id: "name", compare_value: [$itemName]}]}) {
              items {
                id
                name
                column_values {
                  id
                  value
                  text
                }
              }
            }
          }
        }

# PIPELINE STAGE 5: Data Transformations
transformations:
  size_melting:
    description: "Convert 164 size columns to individual rows"
    input_format: "wide"
    output_format: "long"
    
    logic: |
      def melt_size_columns(order_row: pd.Series) -> List[Dict]:
          size_columns = [
              "XXXS", "XXS", "XS", "S", "S/M", "M", "M/L", "L", "L/XL", "XL", "XXL", "XXXL",
              "0", "2", "4", "6", "8", "10", "12", "14", "16", "18", "20",
              "0-3M", "3-6M", "6-9M", "9-12M", "12-18M", "18-24M", "2T", "3T", "4T", "5T", "6T",
              # ... all 164 size columns
          ]
          
          melted_rows = []
          for size_col in size_columns:
              qty = order_row[size_col]
              if pd.notna(qty) and qty > 0:
                  melted_row = {
                      'parent_aag_order_number': order_row['AAG ORDER NUMBER'],
                      'parent_customer_style': order_row['CUSTOMER STYLE'],
                      'parent_colour': order_row['CUSTOMER COLOUR DESCRIPTION'],
                      'size': size_col,
                      'quantity': int(qty)
                  }
                  melted_rows.append(melted_row)
          
          return melted_rows
    
  header_aggregation:
    description: "Aggregate order header information"
    logic: |
      def aggregate_order_header(order_row: pd.Series) -> Dict:
          total_qty = sum([
              order_row[col] for col in SIZE_COLUMNS
              if pd.notna(order_row[col]) and order_row[col] > 0
          ])
          
          return {
              'aag_order_number': order_row['AAG ORDER NUMBER'],
              'customer_name': order_row['CUSTOMER NAME'],
              'customer_style': order_row['CUSTOMER STYLE'],
              'total_qty': total_qty,
              # ... other aggregated fields
          }
  
  date_formatting:
    description: "Standardize date formats for Monday.com"
    format: "YYYY-MM-DD"
    
  numeric_cleaning:
    description: "Clean and validate numeric fields"
    logic: "remove_currency_symbols, convert_to_float, handle_nulls"

# PIPELINE STAGE 6: Validation Rules
validation_rules:
  schema_validation:
    - rule: "aag_order_number_required"
      field: "AAG ORDER NUMBER"
      type: "not_null"
      
    - rule: "customer_style_required"
      field: "CUSTOMER STYLE"
      type: "not_null"
      
    - rule: "total_qty_positive"
      field: "TOTAL QTY"
      type: "greater_than"
      value: 0
      
  business_validation:
    - rule: "valid_size_columns"
      description: "All size columns must be integer or null"
      logic: "validate_size_column_types"
      
    - rule: "date_consistency"
      description: "EX FACTORY DATE should be before ETA CUSTOMER WAREHOUSE DATE"
      logic: "ex_factory_date <= eta_customer_warehouse_date"
      
  monday_api_validation:
    - rule: "board_exists"
      description: "Target Monday.com board must exist"
      board_id: "4755559751"
      
    - rule: "column_mapping_valid"
      description: "All mapped columns must exist in Monday.com board"

# PIPELINE STAGE 7: Error Handling
error_handling:
  strategies:
    data_quality_errors:
      action: "log_and_skip"
      notification: "email_data_team"
      
    api_errors:
      action: "retry_with_backoff"
      max_retries: 3
      backoff_seconds: [1, 5, 15]
      
    schema_errors:
      action: "fail_pipeline"
      notification: "immediate_alert"
      
  logging:
    level: "INFO"
    format: "json"
    destination: "utils/logger_helper.py"

# PIPELINE STAGE 8: Performance Configuration
performance:
  batch_processing:
    batch_size: 100
    parallel_workers: 4
    
  api_rate_limiting:
    monday_api_delay: 0.1  # seconds between API calls
    max_concurrent_requests: 10
    
  caching:
    enable_size_column_cache: true
    cache_ttl_minutes: 60

# IMPLEMENTATION REFERENCES
implementation_files:
  python_modules:
    - "dev/orders_unified_delta_sync_v3/staging_processor.py"
    - "dev/orders_unified_delta_sync_v3/monday_api_adapter.py"
    - "dev/orders_unified_delta_sync_v3/order_mapping.py"
    
  sql_files:
    - "sql/ddl/tables/orders/staging/stg_mon_custmasterschedule.sql"
    - "sql/ddl/tables/orders/staging/stg_mon_custmasterschedule_subitems.sql"
    - "sql/ddl/tables/orders/dbo_ORDERS_UNIFIED_ddl.sql"
    
  graphql_templates:
    - "sql/graphql/mutations/create_order_item.graphql"
    - "sql/graphql/mutations/create_size_subitem.graphql"
    - "sql/graphql/mutations/update_order_item.graphql"
    - "sql/graphql/queries/query_item_validation.graphql"
    
  configuration_files:
    - "utils/config.yaml"
    - "sql/mappings/simple-orders-mapping.yaml"
    
  documentation_files:
    - "docs/ORDERS_UNIFIED_BACKWARD_MAPPING_COMPREHENSIVE.md"
    - "docs/MAPPING_ANALYSIS_COMPREHENSIVE_REPORT.md"
    - "docs/YAML_MAPPING_FORMAT_DECISION.md"

# MILESTONE TRACKING
milestones:
  current_milestone: "1.1 - Schema Validation and Size Column Analysis"
  completion_percentage: 85
  
  completed:
    - "1.0 - Comprehensive mapping documentation"
    - "Size column identification and categorization"
    - "Backward mapping analysis"
    - "YAML format standardization"
    
  pending:
    - "Schema validation utility implementation"
    - "Size column analyzer tool"
    - "GraphQL template generation"
    - "End-to-end testing"
    - "Production deployment"

# NEXT STEPS
next_actions:
  immediate:
    - "Implement schema validation utilities"
    - "Create size column analyzer script"
    - "Generate GraphQL mutation templates"
    
  short_term:
    - "Enhance staging processor with YAML mapping"
    - "Update Monday.com API adapter"
    - "Create comprehensive test suite"
    
  long_term:
    - "Production deployment and monitoring"
    - "Performance optimization"
    - "Documentation maintenance"
