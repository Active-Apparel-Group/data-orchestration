id: test-sql-with-variables
namespace: company.team
description: "Test SQL script using hardcoded environment variables"

tasks:
  - id: process_sql_with_variables
    type: io.kestra.plugin.core.flow.WorkingDirectory
    description: "Run SQL script with variables passed as environment variables"    
    namespaceFiles:
      enabled: true
      include:
        - scripts/test_sql_with_env.py
        - queries/v_master_order_list.sql
    tasks:
      - id: log_configuration
        type: io.kestra.plugin.core.log.Log
        message: |
          üóÉÔ∏è  Database Configuration:
          Host: ross-db-srv-test.database.windows.net:1433
          Database: ORDERS
          Username: admin_ross
          Encrypt: yes
          
      - id: test_database_connection
        type: io.kestra.plugin.scripts.python.Commands
        taskRunner:
          type: io.kestra.plugin.scripts.runner.docker.Docker
          pullPolicy: NEVER
        containerImage: my-custom-kestra:latest
        description: "Test database connection with environment variables"
        namespaceFiles:
          enabled: true
        env:
          # Database configuration - hardcoded values that work
          DB_ORDERS_HOST: "ross-db-srv-test.database.windows.net"
          DB_ORDERS_PORT: "1433"
          DB_ORDERS_DATABASE: "ORDERS"
          DB_ORDERS_USERNAME: "admin_ross"
          DB_ORDERS_PASSWORD: "Active@IT2023"
          DB_ORDERS_ENCRYPT: "yes"
          DB_ORDERS_TRUSTSERVERCERTIFICATE: "yes"
        commands:
          - echo "=== Testing Database Connection ==="
          - python scripts/test_sql_with_env.py
          
      - id: verify_libraries
        type: io.kestra.plugin.scripts.python.Commands
        taskRunner:
          type: io.kestra.plugin.scripts.runner.docker.Docker
          pullPolicy: NEVER
        containerImage: my-custom-kestra:latest
        description: "Verify Python libraries are available"
        commands:
          - echo "=== Verifying Python Libraries ==="
          - python -c "import pyodbc; print('‚úÖ pyodbc version:', pyodbc.version)"
          - python -c "import pandas; print('‚úÖ pandas version:', pandas.__version__)"
          - python -c "import os; print('‚úÖ Container ready for database operations')"
