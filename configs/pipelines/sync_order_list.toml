# ORDER_LIST Monday Sync Configuration
# ===========================================
# Single source of truth for all pipeline configuration
# Use [phase] to track implementation progress
# Use [environment.{mode}] to switch between dev/prod environments

# DDL REFERENCE LINKS - Database Schema Documentation (Simplified Architecture)
# ==================================================
[ddl_references]
# Main Tables (Primary sync targets with integrated sync columns)
order_list_v2 = "db/ddl/tables/orders/dbo_order_list_v2.sql"                        # Development target table (with sync columns)
order_list_lines = "db/ddl/tables/orders/dbo_order_list_lines.sql"                  # Lines table (with sync columns)

# Source/Staging Tables (Simplified - eliminated swp_order_list_lines)
swp_order_list_v2 = "db/ddl/tables/orders/dbo_swp_order_list_v2.sql"                # Shadow/staging table
# swp_order_list_lines removed - direct MERGE to ORDER_LIST_LINES eliminates staging

# Schema Enhancement Scripts (Task 19.1-19.2)
sync_columns_v2 = "db/ddl/updates/task19_1_add_sync_columns_order_list_v2.sql"      # Sync columns added to ORDER_LIST_V2
sync_columns_lines = "db/ddl/updates/task19_2_add_sync_columns_order_list_lines.sql" # Sync columns added to ORDER_LIST_LINES

# Status/Tracking Tables
monday_sync_status = "db/ddl/tables/orders/dbo_order_list_monday_sync_status.sql"  # Sync status tracking

# Documentation & Tools
sync_architecture = "docs/runbooks/sync_engine_toml_configuration.md"    # TOML configuration guide
ddl_extraction = "tools/extract_ddl.py"                                 # DDL extraction utility

[phase]
# Track implementation progress - TASK 19.15.3 IMPLEMENTATION
current = "phase5b_group_item_transformation"     # Group creation and item name transformation
description = "Enhanced MergeOrchestrator with dynamic transformers"
architecture_change = "Added GroupNameTransformer, ItemNameTransformer, GroupCreationManager"
start_date = "2025-07-27"
target_completion = "2025-07-29"
transformation_date = "2025-07-27"

# ENHANCED TRANSFORMATIONS - TASK 19.15.3
# ========================================

[database.group_name_transformation]
enabled = true
primary_columns = ["CUSTOMER NAME", "CUSTOMER SEASON"]
fallback_columns = ["CUSTOMER NAME", "AAG SEASON"]
separator = " "
target_column = "group_name"
fallback_value = "check"

[database.item_name_transformation]
enabled = true
columns = ["CUSTOMER STYLE", "CUSTOMER COLOUR DESCRIPTION", "AAG ORDER NUMBER"]
separator = ""  # Direct concatenation
target_column = "item_name"
null_handling = "skip_with_separator"

# ENVIRONMENT CONFIGURATION - Production Ready Structure
# =====================================================

[environment.production]
# Development environment - simplified 2-template architecture
source_table = "swp_ORDER_LIST_SYNC"              # Shadow staging table for development
target_table = "FACT_ORDER_LIST"                  # Shadow production table for development (now with sync columns)
lines_table = "ORDER_LIST_LINES"                # Lines table (shared, now with sync columns)
# source_lines_table removed - direct MERGE to lines_table eliminates staging
database = "orders"                             # Database name from config.yaml

[environment.development]
# Production environment - simplified 2-template architecture
source_table = "swp_ORDER_LIST_SYNC"                 # Production staging table
target_table = "FACT_ORDER_LIST"                     # Live production table (will have sync columns)
lines_table = "ORDER_LIST_LINES"                # Lines table (shared, now with sync columns)  
# source_lines_table removed - direct MERGE to lines_table eliminates staging
database = "orders"                             # Database name from config.yaml

# DATABASE CONFIGURATION
# ======================
[database]
# Essential columns required for sync operations (ACTUAL ORDER_LIST_V2 columns)
essential_columns = [
    "AAG ORDER NUMBER",                 # Primary business key
    "CUSTOMER NAME",                    # Customer identification
    "PO NUMBER",                        # Purchase order reference
    "CUSTOMER STYLE",                   # Product identification  
    "TOTAL QTY",                         # Quantity summary
    "group_name",                        # Group name
    "group_id",                          # Group ID
    "item_name"                          # Item name
]

# Sync tracking columns (Enhanced with Task 19.1-19.2 additions)
sync_columns_headers = [
    # ORDER_LIST_V2 sync columns
    "action_type",                      # 'INSERT', 'UPDATE', 'DELETE'
    "sync_state",                       # 'NEW', 'PENDING', 'SYNCED', 'ERROR'
    "monday_item_id",                   # Monday.com item ID storage
    "sync_attempted_at",                # Last sync attempt timestamp
    "sync_completed_at",                # Last successful sync timestamp
    "sync_error_message",               # Error message if sync failed
    "retry_count",                      # Number of retry attempts
    "created_at",                       # Record creation timestamp
    "updated_at",                       # Record update timestamp
    "row_hash"                          # Row hash for change detection
]

sync_columns_lines = [
    # ORDER_LIST_LINES sync columns  
    "action_type",                      # 'INSERT', 'UPDATE', 'DELETE'
    "sync_state",                       # 'NEW', 'PENDING', 'SYNCED', 'ERROR'
    "monday_item_id",                   # Monday.com item ID (legacy)
    "monday_subitem_id",                # Monday.com subitem ID
    "monday_parent_id",                 # Monday.com parent item ID reference
    "sync_attempted_at",                # Last sync attempt timestamp
    "sync_completed_at",                # Last successful sync timestamp
    "sync_error_message",               # Error message if sync failed
    "retry_count"                       # Number of retry attempts
]

# TESTING CONFIGURATION
# =====================
[test_data]
# Multi-customer testing - 2 customers with confirmed data
limit_customers = ["ACTIVELY BLACK", "AESCAPE"]
limit_pos = ["AB0001", "1191"]
limit_records = 100                     # Maximum records per test
test_mode = true

# Test data breakdown (REAL DATA):
# - ACTIVELY BLACK: 14 records available
# - AESCAPE: 44 records available  
# - GREYSON: 5,279 records available (using PO 5397)

# SIZE COLUMNS - Dynamic discovery between markers
[size_detection]
start_after = "UNIT OF MEASURE"        # Column that precedes size columns
end_before = "TOTAL QTY"               # Column that follows size columns
max_sizes = 300                        # Limit for testing

[hash]
# Change detection logic - minimal columns for testing
columns = [
    "AAG ORDER NUMBER",
    "CUSTOMER NAME",                    # Customer identification
    "PO NUMBER",
    "CUSTOMER STYLE",
    "TOTAL QTY"
]
algorithm = "SHA2_256"

[monday.production]
# Development Monday.com boards  
board_id = 9609317401                   # Dev items board
subitem_board_id = 9609317948           # Dev subitems board
create_groups = true                    # Auto-create customer groups
environment = "development"
metadata_path = "configs/boards/board_9609317401_metadata.json"
metadata_subitems_path = "configs/boards/board_9609317948_metadata.json"

[monday.development]  
# Production Monday.com boards
board_id = 9200517329                   # Prod items board
subitem_board_id = 9200771505           # Prod subitems board
create_groups = true                    # Auto-create customer groups
environment = "production"
metadata_path = "configs/boards/board_9200517329_metadata.json"
metadata_subitems_path = "configs/boards/board_9200771505_metadata.json"

# GROUP CREATION & RATE LIMITING CONFIGURATION
# ============================================

[monday.groups]
auto_create = true                      # Enable automatic group creation
batch_creation = true                   # Use batch creation for efficiency

[monday.rate_limits]
group_batch_size = 5                    # Groups per batch (Monday.com API limit)
item_batch_size = 5                     # Items per batch for true batch processing
delay_between_batches = 2.0             # Seconds between batch requests
max_concurrent_batches = 1              # Serialize batch operations
request_timeout = 30.0                  # API request timeout

# ENVIRONMENT-SPECIFIC MONDAY.COM CONFIGURATION
# ===============================================

# ===== DROPDOWN & GROUP MANAGEMENT CONFIGURATION =====
# Based on memory-bank/tasks/_groups_dropdown.md design
# Purpose: Solve Task 19.15.2 - Configure dropdown labels creation
# Critical: AAG SEASON and CUSTOMER SEASON fields empty in Monday.com
# Structure: [monday.{environment}.{item_type}.create_labels_if_missing]

# DEVELOPMENT ENVIRONMENT DROPDOWN CONFIGURATION (Board ID: 9609317401)
# ======================================================================

[monday.production.headers.create_labels_if_missing]
# Default policy for dropdown columns (conservative approach)
default = false

# Headers dropdown columns from [monday.column_mapping.production.headers]
"dropdown_mkr542p2" = false             # CUSTOMER NAME - use existing customers only
"dropdown_mkr518fc" = false             # ORDER TYPE - use existing order types only
"dropdown_mkr58de6" = true              # AAG SEASON - auto-create season labels ⭐ CRITICAL
"dropdown_mkr5s5n3" = true              # CATEGORY - use existing categories only
"dropdown_mkr5rgs6" = true              # CUSTOMER SEASON - auto-create customer season labels ⭐ CRITICAL
"dropdown_mkr5w5e" = true              # DROP - use existing drops only
"dropdown_mkr5kk5" = true              # DELIVERY TERMS - use existing terms only

[monday.production.lines.create_labels_if_missing]
# Default policy for subitem dropdown columns
default = false

# Lines dropdown columns from [monday.column_mapping.production.lines]
"dropdown_mkrak7qp" = true              # size_code - auto-create size labels as needed

# PRODUCTION ENVIRONMENT DROPDOWN CONFIGURATION (Board ID: 9200517329)
# =====================================================================

[monday.development.headers.create_labels_if_missing]
# Default policy for dropdown columns (conservative approach)
default = false

# Headers dropdown columns from [monday.column_mapping.development.headers]
"dropdown_mkp4ar5n" = false             # CUSTOMER - use existing customers only
"dropdown_mkpc7ey8" = false             # ORDER TYPE - use existing order types only
"dropdown_mkp4kmtp" = true              # CUSTOMER SEASON - auto-create customer season labels ⭐ CRITICAL
"dropdown_mkpcj4ev" = false             # DROP - use existing drops only
"dropdown_mkp44k77" = false             # ACTIVE/WOVEN/SWIM/ACC/SEAMLESS - use existing classifications only
"dropdown_mkp4yr3v" = false             # STYLE CATEGORY - use existing categories only
"dropdown_mkpbbtkh" = false             # PRODUCT CAT - use existing product categories only
"dropdown_mkp41kzc" = false             # Fabric Code - use existing fabric codes only
"dropdown_mkp4n679" = false             # Fabric Type - use existing fabric types only
"dropdown_mkp4gmn6" = false             # Destination - use existing destinations only
"dropdown_mkp4wx2p" = false             # PLANNED DELIVERY METHOD - use existing methods only
"dropdown_mkp4e51p" = false             # Incoterms - use existing terms only
"dropdown_mkp4f6se" = false             # COUNTRY OF ORIGIN - use existing countries only
"dropdown_mkpc44w5" = false             # CUSTOMER ALLOCATION - use existing allocations only
"dropdown_mkp43md8" = false             # FACTORY - use existing factories only

[monday.development.lines.create_labels_if_missing]
# Default policy for subitem dropdown columns
default = false

# Lines dropdown columns from [monday.column_mapping.development.lines]
# Note: Production lines use text fields for size_code, no dropdowns to configure

# GROUP CREATION CONFIGURATION (GLOBAL)
# =====================================

[monday.group_creation]
# Group creation workflow configuration
enabled = true                          # Enable automatic group creation
create_before_items = true              # Critical: Create groups BEFORE items (solves Task 19.15.3)
wait_for_completion = true              # Wait for group creation to complete before proceeding

# ===== COMPREHENSIVE MONDAY.COM COLUMN MAPPINGS =====
# Based on ORDER_LIST schema analysis and board metadata examination
# Development Board: 9609317401 | Production Board: 9200517329
# Success Gate: Expand from 5 basic columns to 25+ comprehensive business columns

# Column mapping - ORDER_LIST headers to Monday items (DEVELOPMENT BOARD: 9609317401)
[monday.column_mapping.production.headers]
# === Core Order Information ===
"AAG ORDER NUMBER" = "text_mkr5wya6"  # text - AAG ORDER NUMBER
"PO NUMBER" = "text_mkr5ej2x"  # text - PO NUMBER
"CUSTOMER NAME" = "dropdown_mkr542p2"  # dropdown - CUSTOMER
"CUSTOMER ALT PO" = "text_mkrh94rx"  # text - CUSTOMER ALT PO
"ORDER DATE PO RECEIVED" = "date_mkr5zp5"  # date - ORDER DATE PO RECEIVED
"ORDER TYPE" = "dropdown_mkr518fc"  # dropdown - ORDER TYPE

# === Product Details ===
"CUSTOMER COLOUR DESCRIPTION" = "long_text_mktdy7re"  # long_text - COLOR
"CUSTOMER'S COLOUR CODE (CUSTOM FIELD) CUSTOMER PROVIDES THIS" = "long_text_mktdjzcg"  # long_text - CUSTOMER COLOR CODE
"CUSTOMER STYLE" = "text_mktdechp"  # text - STYLE
"PATTERN ID" = "text_mkr5cz8m"  # text - PATTERN ID
"STYLE DESCRIPTION" = "long_text_mkr5p0cf"  # long_text - STYLE DESCRIPTION
"NOTES" = "long_text_mkr5hass"  # long_text - NOTES
"UNIT OF MEASURE" = "color_mkr5yf27"  # status - UNIT OF MEASURE
"ALIAS/RELATED ITEM" = "text_mkrhra2c"  # text - ALIAS RELATED ITEM

# === Season and Planning ===
"AAG SEASON" = "dropdown_mkr58de6"  # dropdown - AAG SEASON
"CATEGORY" = "dropdown_mkr5s5n3"  # dropdown - CATEGORY
"CUSTOMER SEASON" = "dropdown_mkr5rgs6"  # dropdown - CUSTOMER SEASON
"DROP" = "dropdown_mkr5w5e"  # dropdown - DROP
"RANGE / COLLECTION" = "long_text_mks0vs1p"  # long_text - RANGE / COLLECTION

# === Dates and Timelines ===
"DELIVERY TERMS" = "dropdown_mkr5kk5"  # dropdown - DELIVERY TERMS
"DESTINATION WAREHOUSE" = "text_mkr5ps35"  # text - DESTINATION WAREHOUSE
"PLANNED DELIVERY METHOD" = "text_mkr5wcpw"  # text - PLANNED DELIVERY METHOD
"ETA CUSTOMER WAREHOUSE DATE" = "date_mkr554yz"  # dropdown - CUSTOMER REQ IN DC DATE
"EX FACTORY DATE" = "date_mkr57811"  # date - CUSTOMER EX FACTORY DATE
"Warehouse" = "text_mkr5ps35"  # text - DESTINATION WAREHOUSE

# === Quantities ===
"TOTAL QTY" = "numeric_mktb1d19" #numeric - ORDER QTY

# === Pricing and Financials ===
"ADMINISTRATION FEE" = "numeric_mkr5k68"  # numbers - ADMINISTRATION FEE
"CUSTOMER PRICE" = "numeric_mkr5cact"  # numbers - CUSTOMER PRICE
"DDP US (USD)" = "numeric_mkr5js0x"  # numbers - DDP US (USD)
"DESIGN FEE" = "numeric_mkr5h612"  # numbers - DESIGN FEE
"DISCOUNT" = "numeric_mkr56xx8"  # numbers - DISCOUNT
"EX WORKS (USD)" = "numeric_mkr5erhv"  # numbers - EX WORKS (USD)
"FINAL FOB (USD)" = "numeric_mkr5nhr7"  # numbers - FINAL FOB (USD)
"FINAL PRICES Y/N" = "text_mkr5ptvg"  # text - FINAL PRICES Y/N
"FX CHARGE" = "numeric_mkr5gp6a"  # numbers - FX CHARGE
"NOTES FOR PRICE" = "long_text_mkr5znxn"  # long_text - NOTES FOR PRICE
"SMS PRICE USD" = "numeric_mkr58nvp"  # numbers - SMS PRICE USD
"SURCHARGE FEE" = "numeric_mkr57cem"  # numbers - SURCHARGE FEE
"US DUTY" = "numeric_mkr5ev2q"  # numbers - US DUTY
"US DUTY RATE" = "numeric_mkr5r6at"  # numbers - US DUTY RATE
"US TARIFF" = "numeric_mkr51ndy"  # numbers - US TARIFF
"US TARIFF RATE" = "numeric_mkr55zg1"  # numbers - US TARIFF RATE

# === Shipping and Logistics ===
"DESTINATION" = "text_mkr5kbc6"  # text - DESTINATION
"FREIGHT" = "numeric_mksfr0r2"  # numbers - FREIGHT
"HANDLING" = "text_mkr5s3tm"  # text - HANDLING
"HS CODE" = "long_text_mktdz0g"  # long_text - HS CODE
"UK FREIGHT" = "numeric_mksfr0r2"  # numbers - FREIGHT

# Column mapping - ORDER_LIST_LINES to Monday subitems (DEVELOPMENT)
[monday.column_mapping.production.lines]
"size_code" = "dropdown_mkrak7qp"           # Size code for line items
"qty" = "numeric_mkra7j8e"                  # ORDER QTY - Quantity per size

# Column mapping - ORDER_LIST headers to Monday items (PRODUCTION BOARD: 9200517329)
[monday.column_mapping.development.headers]
# === Core Order Information ===
"AAG ORDER NUMBER"         = "text_mkr5wya6"    # text - AAG ORDER NUMBER
"PO NUMBER"                = "text_mkr5ej2x"    # text - PO NUMBER
"CUSTOMER NAME"            = "dropdown_mkr542p2" # dropdown - CUSTOMER
"CUSTOMER ALT PO"          = "text_mkrh94rx"    # text - CUSTOMER ALT PO
"ORDER DATE PO RECEIVED"   = "date_mkr5zp5"     # date - ORDER DATE PO RECEIVED
"ORDER TYPE"               = "dropdown_mkr518fc" # dropdown - ORDER TYPE

# === Product Details ===
"CUSTOMER COLOUR DESCRIPTION" = "dropdown_mkr5677f" # dropdown - COLOR
"CUSTOMER STYLE"              = "dropdown_mkr5tgaa" # dropdown - STYLE
"PATTERN ID"                  = "text_mkr5cz8m"     # text - PATTERN ID
"STYLE DESCRIPTION"           = "long_text_mkr5p0cf" # long_text - STYLE DESCRIPTION
"NOTES"                       = "long_text_mkr5hass" # long_text - NOTES
"UNIT OF MEASURE"             = "color_mkr5yf27"     # status - UNIT OF MEASURE
"ALIAS/RELATED ITEM"          = "text_mkrhra2c"      # text - ALIAS RELATED ITEM

# === Season and Planning ===
"AAG SEASON"              = "dropdown_mkr58de6"  # dropdown - AAG SEASON
"CATEGORY"                = "dropdown_mkr5s5n3"  # dropdown - CATEGORY
"CUSTOMER SEASON"         = "dropdown_mkr5rgs6"  # dropdown - CUSTOMER SEASON
"DROP"                    = "dropdown_mkr5w5e"   # dropdown - DROP
"RANGE / COLLECTION"      = "long_text_mks0vs1p" # long_text - RANGE / COLLECTION

# === Dates and Timelines ===
"DELIVERY TERMS"             = "dropdown_mkr5kk5"   # dropdown - DELIVERY TERMS
"DESTINATION WAREHOUSE"      = "text_mkr5ps35"      # text - DESTINATION WAREHOUSE
"PLANNED DELIVERY METHOD"    = "text_mkr5wcpw"      # text - PLANNED DELIVERY METHOD
"ETA CUSTOMER WAREHOUSE DATE"= "dropdown_mkr542p2"  # dropdown - CUSTOMER
"EX FACTORY DATE"            = "date_mkr57811"      # date - CUSTOMER EX FACTORY DATE
"Warehouse"                  = "text_mkr5ps35"      # text - DESTINATION WAREHOUSE

# === Pricing and Financials ===
"ADMINISTRATION FEE"     = "numeric_mkr5k68"    # numbers - ADMINISTRATION FEE
"CUSTOMER PRICE"         = "numeric_mkr5cact"   # numbers - CUSTOMER PRICE
"DDP US (USD)"           = "numeric_mkr5js0x"   # numbers - DDP US (USD)
"DESIGN FEE"             = "numeric_mkr5h612"   # numbers - DESIGN FEE
"DISCOUNT"               = "numeric_mkr56xx8"   # numbers - DISCOUNT
"EX WORKS (USD)"         = "numeric_mkr5erhv"   # numbers - EX WORKS (USD)
"FINAL FOB (USD)"        = "numeric_mkr5nhr7"   # numbers - FINAL FOB (USD)
"FINAL PRICES Y/N"       = "text_mkr5ptvg"      # text - FINAL PRICES Y/N
"FX CHARGE"              = "numeric_mkr5gp6a"   # numbers - FX CHARGE
"NOTES FOR PRICE"        = "long_text_mkr5znxn" # long_text - NOTES FOR PRICE
"SMS PRICE USD"          = "numeric_mkr58nvp"   # numbers - SMS PRICE USD
"SURCHARGE FEE"          = "numeric_mkr57cem"   # numbers - SURCHARGE FEE
"US DUTY"                = "numeric_mkr5ev2q"   # numbers - US DUTY
"US DUTY RATE"           = "numeric_mkr5r6at"   # numbers - US DUTY RATE
"US TARIFF"              = "numeric_mkr51ndy"   # numbers - US TARIFF
"US TARIFF RATE"         = "numeric_mkr55zg1"   # numbers - US TARIFF RATE

# === Shipping and Logistics ===
"DESTINATION"            = "text_mkr5kbc6"      # text - DESTINATION
"FREIGHT"                = "numeric_mksfr0r2"   # numbers - FREIGHT
"HANDLING"               = "text_mkr5s3tm"      # text - HANDLING
"HS CODE"                = "dropdown_mkr5k8yn"  # dropdown - HS CODE
"UK FREIGHT"             = "numeric_mksfr0r2"   # numbers - FREIGHT


# Column mapping - ORDER_LIST_LINES to Monday subitems (PRODUCTION)
[monday.column_mapping.development.lines]
"size_code" = "dropdown_mkrak7qp"          # Production size code for line items
"qty" = "numeric_mkra7j8e"                   # Production quantity per size

# === SIZE COLUMN MAPPINGS (COMPREHENSIVE COVERAGE) ===
# Based on ORDER_LIST schema analysis - covers all garment size variations
[monday.column_mapping.size_mappings]
# Standard adult sizes - Most common across all customers
"XS" = "numeric_mkr5size_xs"
"S" = "numeric_mkr5size_s"
"M" = "numeric_mkr5size_m"
"L" = "numeric_mkr5size_l"
"XL" = "numeric_mkr5size_xl"
"XXL" = "numeric_mkr5size_xxl"
"XXXL" = "numeric_mkr5size_xxxl"

# Extended adult sizes
"1X" = "numeric_mkr5size_1x"
"2X" = "numeric_mkr5size_2x"
"2XL" = "numeric_mkr5size_2xl"
"3X" = "numeric_mkr5size_3x"
"3XL" = "numeric_mkr5size_3xl"
"4X" = "numeric_mkr5size_4x"
"4XL" = "numeric_mkr5size_4xl"

# Numeric women's sizes
"0" = "numeric_mkr5size_0"
"1" = "numeric_mkr5size_1"
"2" = "numeric_mkr5size_2"
"4" = "numeric_mkr5size_4"
"6" = "numeric_mkr5size_6"
"8" = "numeric_mkr5size_8"
"10" = "numeric_mkr5size_10"
"12" = "numeric_mkr5size_12"
"14" = "numeric_mkr5size_14"
"16" = "numeric_mkr5size_16"
"18" = "numeric_mkr5size_18"
"20" = "numeric_mkr5size_20"
"22" = "numeric_mkr5size_22"
"24" = "numeric_mkr5size_24"

# Men's waist/inseam sizes (common patterns)
"30/30" = "numeric_mkr5size_30_30"
"30/32" = "numeric_mkr5size_30_32"
"31/30" = "numeric_mkr5size_31_30"
"31/32" = "numeric_mkr5size_31_32"
"32/30" = "numeric_mkr5size_32_30"
"32/32" = "numeric_mkr5size_32_32"
"32/34" = "numeric_mkr5size_32_34"
"34/30" = "numeric_mkr5size_34_30"
"34/32" = "numeric_mkr5size_34_32"
"34/34" = "numeric_mkr5size_34_34"
"36/30" = "numeric_mkr5size_36_30"
"36/32" = "numeric_mkr5size_36_32"
"36/34" = "numeric_mkr5size_36_34"
"38/30" = "numeric_mkr5size_38_30"
"38/32" = "numeric_mkr5size_38_32"
"38/34" = "numeric_mkr5size_38_34"

# Youth/children sizes
"2T" = "numeric_mkr5size_2t"
"3T" = "numeric_mkr5size_3t"
"4T" = "numeric_mkr5size_4t"
"5T" = "numeric_mkr5size_5t"
"6T" = "numeric_mkr5size_6t"

# Infant/toddler sizes
"0-3M" = "numeric_mkr5size_0_3m"
"3-6M" = "numeric_mkr5size_3_6m"
"6-9M" = "numeric_mkr5size_6_9m"
"9-12M" = "numeric_mkr5size_9_12m"
"12-18M" = "numeric_mkr5size_12_18m"
"18-24M" = "numeric_mkr5size_18_24m"

# Youth age ranges
"3-4 years" = "numeric_mkr5size_3_4y"
"5-6 years" = "numeric_mkr5size_5_6y"
"7-8 years" = "numeric_mkr5size_7_8y"
"9-10 years" = "numeric_mkr5size_9_10y"
"11-12 years" = "numeric_mkr5size_11_12y"
"13-14 years" = "numeric_mkr5size_13_14y"

# Special sizes
"ONE SIZE" = "numeric_mkr5size_one_size"
"OS" = "numeric_mkr5size_os"
"One Sz" = "numeric_mkr5size_one_sz"

# Monday.com Sync Configuration - TOML-Driven Architecture
# ========================================================
[monday.sync]
# Integration architecture using new unified handler
handler_type = "unified_integration"      # Uses src/pipelines/sync_order_list/monday/integration_handler.py
graphql_template_engine = true            # Template-driven GraphQL generation
column_mapper_type = "toml_driven"        # Zero hardcoded mappings via monday_column_mapper.py

# Template-based operations configuration
[monday.sync.templates]
# GraphQL templates for different operation types
create_items = "sql/graphql/monday/mutations/batch_create_items.graphql"
create_subitems = "sql/graphql/monday/mutations/batch_create_subitems.graphql"
update_items = "sql/graphql/monday/mutations/batch_update_items.graphql"
update_subitems = "sql/graphql/monday/mutations/batch_update_subitems.graphql"
create_groups = "sql/graphql/monday/mutations/create_group.graphql"

# Column mapping configuration
[monday.sync.column_mapping]
# Source: monday_column_mapper.py with TOML configuration
mapping_file = "configs/pipelines/sync_order_list.toml"  # This file
section_prefix = "monday.column_mapping"                 # Section within TOML
environment_aware = true                                 # Support dev/prod switching

# Group creation strategies
[monday.sync.groups]
strategy = "season"                                      # Create groups for customer season (CUSTOMER + SEASON)
auto_create = true                                       # Create groups if they don't exist
map_to = "group_name"                                    # Maps to group_name column in ORDER_LIST table

# PHASE 2: EXPANDED TESTING CONFIGURATION (FUTURE)
# ================================================
# [test_data.phase2]
# limit_customers = ["GREYSON", "JOHNNIE O", "TRACKSMITH"]
# limit_records = 50
# test_mode = true

# [columns.phase2] 
# order_list = [
#     # Phase 1 columns plus 15 additional business-critical columns
# ]

# PHASE 3: PRODUCTION CONFIGURATION (FUTURE)
# ==========================================
# [environment.development]
# mode = "production"
# target_table = "ORDER_LIST"           # Production table after cutover
# database = "orders"

# APPROVED PATTERNS FROM load_cms ANALYSIS
# ========================================

[sync.approved_patterns]
# ID relationship tracking (item_id → parent_item_id) - APPROVED
# Already implemented in shadow table spec (001_create_shadow_tables.sql)
track_item_relationships = true         # monday_item_id → parent_item_id linking

# Auto-create customer groups - APPROVED (Must Have)
auto_create_groups = true               # Create customer groups if missing  
store_groups_in_db = true               # Enhancement: maintain group registry in DB
group_registry_table = "monday_board_groups"   # Future table for group management

# Enhanced error handling with main table sync state - DELTA-FREE
error_recovery_method = "main_table"    # Use PENDING/FAILED states in main tables (ORDER_LIST_V2, ORDER_LIST_LINES)
max_retries = 3                         # Maximum retry attempts per record
retry_backoff = "exponential"           # Exponential backoff (1s, 2s, 4s)

# Batch processing approach - APPROVED (if needed)
batch_method = "uuid_based"             # Use record_uuid as logical batch identifier
batch_size = 100                        # Records per batch (only if uuid insufficient)

[sync.rejected_patterns] 
# Explicitly rejected patterns from load_cms analysis
staging_validation = false              # Direct main table approach (DELTA-FREE architecture)
separate_staging_tables = false         # Use ORDER_LIST_V2/LINES directly

# CURRENT IMPLEMENTATION FOCUS
# ============================
# Phase 1 implementation will use only the phase1 sections above
# This ensures we validate core workflow before expanding scope
# All subsequent phases will extend this single configuration file
